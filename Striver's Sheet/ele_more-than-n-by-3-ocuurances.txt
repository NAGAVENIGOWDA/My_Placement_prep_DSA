class Solution {
public:

// Extended-Boyer-Moore Voting Algorithm-

    vector<int> majorityElement(vector<int>& v) {
        int n = v.size(); //size of the array
        if(n==0) return {};
    int cnt1 = 0, cnt2 = 0; // counts
    //make sure to initialise
    int el1=INT_MIN ; // element 1
    int el2=INT_MIN ; // element 2

    // applying the Extended Boyer Moore's Voting Algorithm:
    for (int i = 0; i < n; i++) {
        if (cnt1 == 0 && el2 != v[i]) {
            cnt1 ++;
            el1 = v[i];
        }
        else if (cnt2 == 0 && el1 != v[i]) {
            cnt2 ++;
            el2 = v[i];
        }
        else if (v[i] == el1) cnt1++;
        else if (v[i] == el2) cnt2++;
        else {
            cnt1--, cnt2--;
        }
    }

    vector<int> ls; // list of answers

    // Manually check if the stored elements in
    // el1 and el2 are the majority elements:
    cnt1 = 0, cnt2 = 0;
    for (int i = 0; i < n; i++) {
        if (v[i] == el1) cnt1++;
        if (v[i] == el2) cnt2++;
    }


    if (cnt1 >int(n/3)) ls.push_back(el1);
    if (cnt2 >int(n/3)) ls.push_back(el2);

    

    return ls;
    }

    
};