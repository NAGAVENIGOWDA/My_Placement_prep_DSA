vector<vector<int>> fourSum(vector<int>& nums, int target) {
        //need to take care of duplicate elements;
        vector<vector<int>>ans;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=0;i<n;i++){
            if (i > 0 && nums[i] == nums[i - 1]) continue;

            for(int j=i+1;j<n;j++){
                if (j > i+1 && nums[j] == nums[j - 1]) continue;
                int l=j+1;
                int u=n-1;
                
                while(l<u){
                    long long cur=nums[i];
                    cur+=nums[j];
                    cur+=nums[l];
                    cur+=nums[u];

                    if(cur==target){
                        vector<int> temp = {nums[i], nums[j], nums[l], nums[u]};
                        ans.push_back(temp);
                        l++;
                        u--;

                    while (l < u && nums[l] == nums[l - 1]) l++;
                    while (l < u && nums[u] == nums[u + 1]) u--;
                    }

                    else if(cur<target){
                        l++;
                    }
                    else{
                        u--;
                    }
                }
            }
        }

    return ans;
    }