class Solution
{
public:
   vector<int> extract(string &s){
        int flag  =0 , currsum = 0;
        vector<int>ans;
        for(int i =0; i < s.size(); i++){
            if(s[i] == '.'){
                ans.push_back(currsum);
                currsum = 0;
            }else{
                currsum =currsum * 10 + (s[i] - '0');
            }
        }
        // if(s[s.size() - 1] != '.') ans.push_back(currsum);
        ans.push_back(currsum);
        return ans;
    }

    void equalize(vector<int> &a , vector<int> &b){
        //a is smaller than b
        if(a.size() == b.size()) return ;
        else if(a.size() > b.size()){
            equalize(b , a);
            return;
        }
        int i = a.size();
        while(i < b.size()) {
            a.push_back(0);
            i++;
        }
    }
    int compareVersion(string version1, string version2) {
        vector<int> rev1 = extract(version1) , rev2 = extract(version2);
        equalize(rev1 , rev2);
        for(int i =0; i < rev1.size(); i++){
            if(rev1[i] < rev2[i]) return -1;
            else if(rev1[i] > rev2[i]) return 1;
        }
        return 0;
    }
};