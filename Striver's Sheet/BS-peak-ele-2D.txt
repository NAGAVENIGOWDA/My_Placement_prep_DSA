class Solution {
public:

    int maxEleRow(vector<vector<int>>& a, int col) {
    int maxEle = INT_MIN;
    int maxRow = -1;
    for (int i = 0; i < a.size(); i++) {
        if (a[i][col] > maxEle) {
            maxEle = a[i][col];
            maxRow = i;
        }
    }
    return maxRow;
}

    vector<int> findPeakGrid(vector<vector<int>>& mat) {

        int low=0;
        int high=mat[0].size()-1;

        while(low<=high){
            int mid=(low+high)/2;
            int row=maxEleRow(mat,mid);

            int left=( (mid-1) >=0)?mat[row][mid-1] :-1;
            int right=((mid+1) < mat[0].size()) ? mat[row][mid+1] :-1;

            if(mat[row][mid] >=left && mat[row][mid]>=right){
                return {row,mid};
            }

            if(mat[row][mid] <left){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }

    return {-1,-1} ;//dummy
        
    }
};