//Function to find the lowest common ancestor in a BST.
class Solution{
    public:
        Node* LCA(Node *root, int n1, int n2)
        {
            // code here
            if(root==NULL) return NULL;
            
            if(root->data==n1 || root->data==n2) return root;
            
            
           Node* left= LCA(root->left,n1,n2);
            Node * right=LCA(root->right,n1,n2);
            
            if(left==NULL && right==NULL) return NULL;
            
            if(left && right)  return root;
            if(left) return LCA(root->left,n1,n2);
            else return LCA(root->right,n1,n2);
            
            
            return root;
        }


};
